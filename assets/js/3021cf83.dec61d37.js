"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[538],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(f,i(i({ref:n},p),{},{components:t})):a.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},276:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>G,contentTitle:()=>T,default:()=>S,frontMatter:()=>E,metadata:()=>P,toc:()=>I});var a=t(7462),r=t(7294),o=t(3905),i=t(6010),l=t(2466),c=t(6550),s=t(1980),p=t(7392),u=t(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,p.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const a=(0,c.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=m(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[c,s]=h({queryString:t,groupId:a}),[p,d]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,u.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),g=(()=>{const e=c??p;return f({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),s(e),d(e)}),[s,d,o]),tabValues:o}}var y=t(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:n,block:t,selectedValue:o,selectValue:c,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),d=e=>{const n=e.currentTarget,t=p.indexOf(n),a=s[t].value;a!==o&&(u(n),c(a))},m=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;n=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;n=p[t]??p[p.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:e=>p.push(e),onKeyDown:m,onClick:d},l,{className:(0,i.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":o===n})}),t??n)})))}function k(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function x(e){const n=g(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",b.tabList)},r.createElement(v,(0,a.Z)({},e,n)),r.createElement(k,(0,a.Z)({},e,n)))}function w(e){const n=(0,y.Z)();return r.createElement(x,(0,a.Z)({key:String(n)},e))}const D={tabItem:"tabItem_Ymn6"};function N(e){let{children:n,hidden:t,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(D.tabItem,a),hidden:t},n)}const E={description:"How to install and use Payload Dependency Graph Plugin"},T="Getting Started",P={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"How to install and use Payload Dependency Graph Plugin",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/payload-dependency-graph/getting-started",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started.mdx",tags:[],version:"current",frontMatter:{description:"How to install and use Payload Dependency Graph Plugin"},sidebar:"docs",previous:{title:"Introduction",permalink:"/payload-dependency-graph/"}},G={},I=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Plugin Options",id:"plugin-options",level:3},{value:"Factory",id:"factory",level:4},{value:"Editor Extractor",id:"editor-extractor",level:4},{value:"Example",id:"example",level:5},{value:"Usage",id:"usage",level:2},{value:"Listening",id:"listening",level:3},{value:"Determine Dependencies",id:"determine-dependencies",level:3}],C={toc:I},O="wrapper";function S(e){let{components:n,...t}=e;return(0,o.kt)(O,(0,a.Z)({},C,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The major version of the plugin must match the major version of the Payload.")),(0,o.kt)(w,{groupId:"npm2yarn",mdxType:"Tabs"},(0,o.kt)(N,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install payload-dependency-graph\n"))),(0,o.kt)(N,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add payload-dependency-graph\n"))),(0,o.kt)(N,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add payload-dependency-graph\n")))),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins")," array of your ",(0,o.kt)("a",{parentName:"p",href:"https://payloadcms.com/docs/configuration/overview"},"Payload config"),", call the plugin with ",(0,o.kt)("a",{parentName:"p",href:"#plugin-options"},"options"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/payload.config.ts"',title:'"src/payload.config.ts"'},"import { buildConfig } from 'payload/config';\nimport { DependencyGraphPlugin } from 'payload-dependency-graph';\n\nconst config = buildConfig({\n    // ... rest of your config\n    plugins: [DependencyGraphPlugin()],\n});\n\nexport default config;\n")),(0,o.kt)("h3",{id:"plugin-options"},"Plugin Options"),(0,o.kt)("p",null,"Plugin Options are available ",(0,o.kt)("a",{parentName:"p",href:"/api/interfaces/DependencyGraphPluginConfig"},"here"),"."),(0,o.kt)("h4",{id:"factory"},"Factory"),(0,o.kt)("p",null,"By default, the plugin uses the ",(0,o.kt)("a",{parentName:"p",href:"/api/classes/InMemoryDependencyGraph"},"InMemoryDependencyGraph"),", but you can use another way to manage dependencies as long as you extend the ",(0,o.kt)("a",{parentName:"p",href:"/api/classes/DependencyGraphBase"},"DependencyGraphBase")," class. You can do this using the ",(0,o.kt)("a",{parentName:"p",href:"/api/interfaces/DependencyGraphPluginConfig#factory"},"factory")," property."),(0,o.kt)("p",null,"If you're dealing with a lot of documents, a better approach is to use a database-oriented implementation because the in-memory approach will increase the RAM. The only available database-oriented implementation is ",(0,o.kt)("a",{parentName:"p",href:"/api/classes/MongoDBDependencyGraph"},"MongoDB Dependency Graph")," and in the future minor versions it will be added a implementation for PostgreSQL which is currently beta."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"/api/classes/MongoDBDependencyGraph"},(0,o.kt)("strong",{parentName:"a"},"MongoDB Dependency Graph"))," is available for versions greater than or equal to ",(0,o.kt)("strong",{parentName:"p"},"2.1.x"),".")),(0,o.kt)("h4",{id:"editor-extractor"},"Editor Extractor"),(0,o.kt)("p",null,"Rich Text Fields can have relationships with other documents. The only problem is that the Payload Editor is highly customizable, therefore you can have editor features that use relationships. This can be difficult to extract relations for several reasons:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You cannot extract an exact schema of what is in Rich Text."),(0,o.kt)("li",{parentName:"ul"},"From ",(0,o.kt)("strong",{parentName:"li"},"Payload 2.x.x")," you can choose the editor you want to use, meaning that the structure of the value can differ.")),(0,o.kt)("p",null,"Therefore ",(0,o.kt)("a",{parentName:"p",href:"/api/interfaces/DependencyGraphPluginConfig#editorextractor"},"editorExtractor")," is a function that gives you the ability to parse the Rich Text value and extract its dependencies."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you are using ",(0,o.kt)("strong",{parentName:"p"},"Payload 2.x.x"),", you should be aware that each Rich Text field can customize its editor settings. In response, I added the option to customize the EditorExtractor for each field."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { CollectionConfig } from 'payload/types';\nimport { lexicalEditor } from '@payloadcms/richtext-lexical';\n\nexport const Pages: CollectionConfig = {\n    slug: 'pages',\n    fields: [\n        {\n            name: 'content',\n            type: 'richText',\n            editor: lexicalEditor({\n                // ... your settings\n            }),\n            custom: {\n                editorExtractor: (args) => {\n                    // ... your editor extractor implementation\n                },\n            },\n        },\n    ],\n};\n"))),(0,o.kt)("h5",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { buildConfig } from 'payload/config';\nimport { DependencyGraphPlugin } from 'payload-dependency-graph';\n\nconst extract = async (nodes: any[], source, dependencyGraph) => {\n    for (let node of nodes) {\n        if ('children' in node) {\n            await extract(node.children);\n        } else if (node.type === 'image') {\n            await dependencyGraph.addDependency(source, {\n                collection: node.collection,\n                id: node.doc.id,\n            });\n        }\n    }\n};\n\nconst config = buildConfig({\n    // ... rest of your config\n    plugins: [\n        DependencyGraphPlugin({\n            editorExtractor: async ({ source, value, dependencyGraph }) => {\n                await extract(value, source, dependencyGraph);\n            },\n        }),\n    ],\n});\n\nexport default config;\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The utility of this plugin lies in listening to events on collections or globals and determining resource dependencies."),(0,o.kt)("h3",{id:"listening"},"Listening"),(0,o.kt)("p",null,"If you want to listen for changes, call the ",(0,o.kt)("a",{parentName:"p",href:"/api/classes/DependencyGraphServiceImpl#subscribe"},"subscribe")," from ",(0,o.kt)("a",{parentName:"p",href:"/api/overview#dependencygraphservice"},"DependencyGraphService"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"DependencyGraphService")," is a singletone instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { buildConfig } from 'payload/config';\nimport { DependencyGraphPlugin, DependencyGraphService } from 'payload-dependency-graph';\n\nconst config = buildConfig({\n    // ... rest of your config\n    plugins: [DependencyGraphPlugin()],\n    onInit: (payload) => {\n        DependencyGraphService.subscribe((event) => {\n            // write your own logic\n        });\n    },\n});\n\nexport default config;\n")),(0,o.kt)("h3",{id:"determine-dependencies"},"Determine Dependencies"),(0,o.kt)("p",null,"To determine if a resource is a dependency for another resource use the ",(0,o.kt)("a",{parentName:"p",href:"/api/classes/DependencyGraphServiceImpl#dependencyGraph"},"dependencyGraph")," from ",(0,o.kt)("a",{parentName:"p",href:"/api/overview#dependencygraphservice"},"DependencyGraphService"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { buildConfig } from 'payload/config';\nimport { DependencyGraphPlugin, DependencyGraphService } from 'payload-dependency-graph';\n\nconst config = buildConfig({\n    // ... rest of your config\n    plugins: [DependencyGraphPlugin()],\n    onInit: (payload) => {\n        DependencyGraphService.subscribe((event) => {\n            if (event.type === 'update' && event.collection) {\n                const graph = DependencyGraphService.dependencyGraph;\n                const resource = {\n                    collection: event.collection,\n                    id: event.doc.id,\n                };\n\n                if (event.collection === 'pages' && event.doc.id === 'home') {\n                    // regenerate home page\n                } else {\n                    if (\n                        graph.isDependency(\n                            {\n                                collection: 'pages',\n                                id: 'home',\n                            },\n                            resource,\n                        )\n                    ) {\n                        // regenerate home page\n                    }\n                }\n            }\n        });\n    },\n});\n\nexport default config;\n")))}S.isMDXComponent=!0}}]);